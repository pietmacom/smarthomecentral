version: "3.8"
services:
  raspberrymatic:
    image: ghcr.io/jens-maus/raspberrymatic:3.67.10.20230225-53b790d
    labels:
      - "traefik.http.routers.raspberrymatic.rule=HostRegexp(`{host:.*}`) && PathPrefix(`/raspberrymatic`)"
      - "traefik.http.routers.raspberrymatic.middlewares=raspberrymatic-header,raspberrymatic-stripprefix"
      - "traefik.http.middlewares.raspberrymatic-stripprefix.stripprefix.prefixes=/raspberrymatic/,/"
      - "traefik.http.middlewares.raspberrymatic-header.headers.customrequestheaders.x-ingress-path=/raspberrymatic"
      - "traefik.http.services.raspberrymatic.loadbalancer.server.port=8099"

      - "homer.enable=true"
      - "homer.service=Applications"
      - "homer.name=RaspberryMatic"
      - "homer.subtitle=Homematic central control unit (CCU)"
      - "homer.url=/raspberrymatic/"
      - "homer.target=_blank"
      - "homer.logo=https://github.com/jens-maus/RaspberryMatic/raw/master/release/rpi-imager.png"
    privileged: true
    restart: "unless-stopped"
    stop_grace_period: 30s
    healthcheck:
      disable: true
    environment:
      - HM_HAPROXY_SRC=0.0.0.0/0
    volumes:
      - ccu_data:/usr/local:rw
      - /lib/modules:/lib/modules:ro
      - /run/udev/control:/run/udev/control
      - /etc/localtime:/etc/localtime:ro
#    cpu_rt_runtime: 950000
    ulimits:
      rtprio: 99



  # Docs
  #  - https://nodered.org/docs/getting-started/docker
  nodered:
    image: nodered/node-red:latest
    labels:
      - "traefik.http.routers.nodered.rule=HostRegexp(`{host:.*}`) && PathPrefix(`/nodered`)"
      - "traefik.http.routers.nodered.middlewares=nodered-header,nodered-stripprefix"
      - "traefik.http.middlewares.nodered-stripprefix.stripprefix.prefixes=/nodered/,/"
      - "traefik.http.middlewares.nodered-header.headers.customrequestheaders.x-ingress-path=/nodered"
      - "traefik.http.services.nodered.loadbalancer.server.port=1880"

      - "homer.enable=true"
      - "homer.service=Applications"
      - "homer.name=Nodered"
      - "homer.subtitle=Flow-based programming tool"
      - "homer.url=/nodered/"
      - "homer.target=_blank"
      - "homer.logo=https://nodered.org/about/resources/media/node-red-icon.png"
    restart: "unless-stopped"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nodered_data:/data

  # Docs
  # - https://discourse.nodered.org/t/auto-install-packages-using-package-json/23135/4
  # - https://nodered.org/docs/user-guide/node-red-admin
  nodered-init:
    image: nodered/node-red:latest
    entrypoint: ''
    command: /bin/sh -c "node-red-admin target http://nodered:1880 && sleep 20 && node-red-admin install node-red-contrib-huemagic-fork || true && node-red-admin install node-red-contrib-ccu || true"
    depends_on:
      nodered:
        condition: service_started

  homeassistant:
    image: "ghcr.io/home-assistant/home-assistant:stable"
    labels:
      - "homer.enable=true"
      - "homer.service=Applications"
      - "homer.name=Home Asssistant"
      - "homer.subtitle=Open source home automation"
      - "homer.url=http://${HOSTNAME}:8123"
      - "homer.target=_blank"
      - "homer.logo=https://www.home-assistant.io/images/supported_brands/home-assistant.png"
    restart: "unless-stopped"
    volumes:
      - homeassist_config:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8123:8123"

  eclipse-mosquitto:
    image: eclipse-mosquitto:2.0.15
    hostname: mqtt
    restart: "unless-stopped"
    volumes:
      - mosquitto_data:/mosquitto/data

  frigate:
    image: ghcr.io/blakeblackshear/frigate:0.12.0-beta8
    labels:
      - "traefik.http.routers.frigate.rule=HostRegexp(`{host:.*}`) && PathPrefix(`/frigate`)"
      - "traefik.http.routers.frigate.middlewares=frigate-header,frigate-stripprefix"
      - "traefik.http.middlewares.frigate-stripprefix.stripprefix.prefixes=/frigate/,/"
      - "traefik.http.middlewares.frigate-header.headers.customrequestheaders.x-ingress-path=/frigate"
      - "traefik.http.services.frigate.loadbalancer.server.port=5000"

      - "homer.enable=true"
      - "homer.service=Applications"
      - "homer.name=Frigate"
      - "homer.subtitle=A complete and local NVR"
      - "homer.url=/frigate/"
      - "homer.target=_blank"
      - "homer.logo=https://docs.frigate.video/img/logo.svg"
    restart: "unless-stopped"
    environment:
      FRIGATE_RTSP_PASSWORD: "pass"
      PLUS_API_KEY: "874c2cfc-b306-4381-9f93-644ae98fa6c8:a1c3da22670778253b283deefad1a1f499677d7c"
#    privileged: true
    group_add:
      - "109" # render
      - "110" # render
      - "44"  # video
      - "46"  # plugdev
    shm_size: "256mb"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/frigate/config.yml:/config/config.yml:ro
      - frigate_media:/media/frigate
      - /dev/bus/usb:/dev/bus/usb
    devices:
      - /dev/bus/usb:/dev/bus/usb
#      - /dev/video10:/dev/video10
#      - /dev/video11:/dev/video11
#      - /dev/video12:/dev/video12
#      - /dev/video13:/dev/video13
#      - /dev/video14:/dev/video14
#      - /dev/video15:/dev/video15
#      - /dev/video16:/dev/video16
#      - /dev/video18:/dev/video18
#      - /dev/video20:/dev/video20
#      - /dev/video21:/dev/video21
#      - /dev/video22:/dev/video22
#      - /dev/video23:/dev/video23
#      - /dev/video31:/dev/video31
    depends_on:
      - eclipse-mosquitto

  docker-volume-backup:
    volumes:
      - ccu_data:/backup/ccu_data
      - nodered_data:/backup/nodered_data
      - homeassist_config:/backup/homeassist_config
      - mosquitto_data:/backup/mosquitto_data
      - frigate_media:/backup/frigate_media

volumes:
  ccu_data:
  nodered_data:
  homeassist_config:
  mosquitto_data:
  frigate_media: